import Head from "next/head";
import {
	Flex,
	Text,
	Heading,
	Select,
	Spinner,
	Box,
	Button,
} from "@chakra-ui/react";
import axios from "axios";
import { useRef, useState } from "react";
import { useIdleTimer } from "react-idle-timer";

export default function Home({ category, quote, start }) {
	const cat = useRef();
	const [author, setAuthor] = useState(quote.author);
	const [quotes, setQuotes] = useState(quote.content);
	const [val, setVal] = useState(false);
	const [bgImage, setBgImage] = useState("white");
	const [fontCol, setFontCol] = useState("black");
	const { reset } = useIdleTimer({
		timeout: 1000 * 60 * 3,
		onIdle: handleOnIdle,
	});

	function handleOnIdle() {
		cat.current.value =
			category[Math.floor(Math.random() * category.length)];
		genQuote();
		reset();
	}

	async function genQuote() {
		const response = await axios.get(
			`https://api.quotable.io/random?tags=${cat.current.value}`
		);
		setAuthor(response.data.author);
		setQuotes(response.data.content);
		let x = Math.floor(Math.random() * 256);
		let y = Math.floor(Math.random() * 256);
		let z = Math.floor(Math.random() * 256);
		let bgColor = "rgb(" + x + "," + y + "," + z + ")";
		setBgImage(bgColor);

		let luminance = (0.299 * x + 0.587 * y + 0.114 * z) / 255;
		let d = 0;
		if (luminance > 0.5) d = 0;
		// bright colors - black font
		else d = 255; // dark colors - white font

		setFontCol(`rgb(${d},${d},${d})`);

		setVal(!val);
	}

	return (
		<>
			<Head>
				<title>Random Quote Generator</title>
				<meta
					name="description"
					content="Generated by create next app"
				/>
				<link rel="preconnect" href="https://fonts.googleapis.com" />
				<link
					rel="preconnect"
					href="https://fonts.gstatic.com"
					crossOrigin="true"
				/>
				<link
					href="https://fonts.googleapis.com/css2?family=Prompt:wght@300&display=swap"
					rel="stylesheet"
				/>
			</Head>
			<Box minH="100vh" w="100vw" zIndex="-1" position="fixed"></Box>
			<Flex
				flexDir="column"
				alignItems="center"
				justifyContent="center"
				w="100vw"
				bg={bgImage}
				minH="100vh"
			>
				<Heading my="3rem" fontSize="2rem" color={fontCol}>
					Random Quote Generator
				</Heading>
				<Flex
					justifyContent="center"
					bg="purple"
					w="100vw"
					mb="3rem"
					p="1rem"
				>
					<Flex
						alignItems="center"
						justifyContent="space-around"
						w="30%"
						minW="200px"
					>
						<Text as="strong" color="white">
							Select a category :
						</Text>
						<Select
							maxW="250px"
							textTransform="capitalize"
							ref={cat}
							defaultValue={start}
							variant="outline"
							color="black"
							bgColor="white"
						>
							{category &&
								category.map((item) => (
									<option value={item} key={item}>
										{item}
									</option>
								))}
							{!category && <Spinner size="lg" />}
						</Select>
					</Flex>
				</Flex>
				<Box
					w="50%"
					minW="250px"
					bg="gray.100"
					boxShadow="inset 2px 2px 8px gray"
					borderRadius="lg"
					p="3rem"
					fontSize="1.8rem"
					fontFamily="Prompt"
				>
					<Text as="blockquote" fontWeight="semibold">
						{quotes}
					</Text>
					<Text as="i" d="block" textAlign="right" mt="2rem">
						~ {author}
					</Text>
				</Box>
				<Button onClick={genQuote} colorScheme="facebook" mt="3rem">
					Get New Quote
				</Button>
			</Flex>
		</>
	);
}

export async function getStaticProps() {
	const resp = await axios.get("https://api.quotable.io/tags");
	const categories = resp.data.map((each) => each.name);

	let tempCat = categories[Math.floor(Math.random() * categories.length)];
	if (tempCat === "proverb") tempCat = "business";

	const quoterR = await axios.get(
		"https://api.quotable.io/random?tags=" + tempCat
	);

	return {
		props: {
			category: categories,
			start: tempCat,
			quote: quoterR.data,
		},
	};
}
